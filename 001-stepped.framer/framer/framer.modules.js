require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"MotionScope":[function(require,module,exports){
var Graph, MotionScope, PlotLine,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Graph = (function() {
  var _instance;

  _instance = null;

  function Graph() {
    this.tick = bind(this.tick, this);
    this.draw = bind(this.draw, this);
    this.timeInterval = bind(this.timeInterval, this);
    this.y = bind(this.y, this);
    this.addLegend = bind(this.addLegend, this);
    this.create = bind(this.create, this);
    this.time = 0;
    this.plots = {};
    this.scope = MotionScope.get();
    this.create();
    this.tick();
  }

  Graph.get = function() {
    return _instance != null ? _instance : _instance = new Graph();
  };

  Graph.prototype.create = function() {
    this.x = d3.scale.linear().range([0, this.scope.options.width - (this.scope.options.margin * 2)]);
    this.svg = d3.select(this.scope.options.parent._element).append('svg').attr('width', this.scope.options.width).attr('height', this.scope.options.height).style('background', 'black').append('g');
    this.svg.append("line").attr("x1", this.scope.options.margin).attr("y1", this.scope.options.margin).attr("x2", this.scope.options.width - this.scope.options.margin).attr("y2", this.scope.options.margin).style("stroke-width", 1).style("stroke-dasharray", '8, 5').style("stroke", '#979797');
    this.svg.append("line").attr("x1", this.scope.options.margin).attr("y1", this.scope.options.height - this.scope.options.margin).attr("x2", this.scope.options.width - this.scope.options.margin).attr("y2", this.scope.options.height - this.scope.options.margin).style("stroke-width", 1).style("stroke-dasharray", '8, 5').style("stroke", '#979797');
    this.svg.append("line").attr("x1", this.scope.options.margin).attr("y1", this.scope.options.height * 0.5).attr("x2", this.scope.options.width - this.scope.options.margin).attr("y2", this.scope.options.height * 0.5).style("stroke-width", 1).style("stroke", '#979797');
    this.paths = this.svg.append('g').attr('transform', "translate(" + this.scope.options.margin + ", " + this.scope.options.margin + ")");
    this.legend = d3.select(this.scope.options.parent._element).append("div").style('position', 'absolute').style('top', '0px').style('left', '0px').style('width', (this.scope.options.width - 10) + "px").style('height', (this.scope.options.height - 40) + "px").style('display', 'flex').style('justify-content', 'flex-end').style('align-items', 'flex-end');
    return this.svg.append('path').attr('transform', "translate(" + (this.scope.options.width - 107 - 10) + ", " + (this.scope.options.height - 12 - 10) + ")").attr("fill", '#D8D8D8').attr('d', 'M10.755 11V.431h-1.53L5.606 9.176H5.49L1.871.431H.341V11h1.23V2.929h.088l3.332 7.998h1.113l3.333-7.998h.088V11h1.23zM17.662.182c1.504 0 2.686.498 3.545 1.494.86.996 1.29 2.342 1.29 4.036 0 1.69-.43 3.035-1.286 4.036-.857 1-2.04 1.501-3.549 1.501-1.514 0-2.701-.5-3.563-1.501-.862-1.001-1.293-2.347-1.293-4.036 0-1.7.436-3.046 1.308-4.04.871-.993 2.054-1.49 3.548-1.49zm0 1.216c-1.074 0-1.926.388-2.556 1.165-.63.776-.945 1.826-.945 3.149 0 1.309.309 2.356.927 3.142.617.786 1.475 1.18 2.574 1.18 1.084 0 1.935-.394 2.553-1.18.617-.786.926-1.833.926-3.142 0-1.323-.31-2.373-.93-3.15-.62-.776-1.47-1.164-2.549-1.164zM27.797 11V1.618h3.406V.43h-8.13v1.187h3.406V11h1.318zm6.526 0V.431h-1.318V11h1.318zM41.23.182c1.504 0 2.686.498 3.545 1.494.86.996 1.289 2.342 1.289 4.036 0 1.69-.428 3.035-1.285 4.036-.857 1-2.04 1.501-3.549 1.501-1.514 0-2.701-.5-3.563-1.501-.862-1.001-1.293-2.347-1.293-4.036 0-1.7.436-3.046 1.307-4.04.872-.993 2.055-1.49 3.549-1.49zm0 1.216c-1.074 0-1.926.388-2.556 1.165-.63.776-.945 1.826-.945 3.149 0 1.309.309 2.356.927 3.142.617.786 1.475 1.18 2.574 1.18 1.084 0 1.935-.394 2.552-1.18.618-.786.927-1.833.927-3.142 0-1.323-.31-2.373-.93-3.15-.62-.776-1.47-1.164-2.549-1.164zM49.418 11V2.804h.118L55.27 11h1.281V.431H55.25v8.225h-.118L49.396.431h-1.281V11h1.303zm9.09-2.761c.068.913.46 1.643 1.175 2.19.716.547 1.632.82 2.75.82 1.212 0 2.172-.287 2.883-.86.71-.574 1.065-1.347 1.065-2.319 0-.776-.238-1.394-.714-1.853-.476-.459-1.26-.825-2.355-1.098l-1.105-.293c-.728-.186-1.25-.408-1.564-.667a1.246 1.246 0 0 1-.473-1.01c0-.538.214-.967.641-1.29.428-.322.993-.483 1.696-.483.659 0 1.2.153 1.622.458.423.305.68.728.773 1.27h1.326c-.054-.854-.425-1.555-1.114-2.102-.688-.546-1.543-.82-2.563-.82-1.118 0-2.02.277-2.707.831-.686.555-1.029 1.28-1.029 2.18 0 .751.218 1.353.652 1.805.435.451 1.13.8 2.088 1.044l1.355.351c.727.18 1.262.42 1.604.718.341.298.512.671.512 1.12 0 .523-.233.956-.7 1.3-.465.345-1.055.517-1.768.517-.752 0-1.372-.164-1.86-.49-.489-.328-.774-.767-.857-1.32h-1.333zm14.084 3.01c1.123 0 2.072-.29 2.846-.868.774-.579 1.249-1.354 1.424-2.325h-1.34a2.476 2.476 0 0 1-1.036 1.446c-.525.354-1.156.531-1.894.531-1.015 0-1.821-.388-2.417-1.164-.595-.777-.893-1.827-.893-3.15 0-1.328.296-2.38.89-3.157.593-.776 1.397-1.164 2.413-1.164.728 0 1.355.199 1.882.597.528.398.88.939 1.055 1.622h1.34c-.156-1.02-.63-1.848-1.42-2.483C74.65.5 73.697.182 72.584.182c-1.436 0-2.57.496-3.406 1.487-.835.991-1.252 2.341-1.252 4.05 0 1.704.418 3.052 1.256 4.043.837.991 1.974 1.487 3.41 1.487zM83.286.182c1.504 0 2.685.498 3.545 1.494.859.996 1.289 2.342 1.289 4.036 0 1.69-.429 3.035-1.286 4.036-.857 1-2.04 1.501-3.548 1.501-1.514 0-2.702-.5-3.564-1.501-.861-1.001-1.292-2.347-1.292-4.036 0-1.7.435-3.046 1.307-4.04.872-.993 2.054-1.49 3.549-1.49zm0 1.216c-1.075 0-1.927.388-2.557 1.165-.63.776-.944 1.826-.944 3.149 0 1.309.309 2.356.926 3.142.618.786 1.476 1.18 2.575 1.18 1.084 0 1.934-.394 2.552-1.18.618-.786.927-1.833.927-3.142 0-1.323-.31-2.373-.93-3.15-.62-.776-1.47-1.164-2.55-1.164zM90.17.43h3.992c1.001 0 1.815.319 2.443.956.627.637.94 1.459.94 2.465 0 .986-.318 1.795-.955 2.428-.637.632-1.451.948-2.443.948H91.49V11H90.17V.431zm1.319 1.172v4.453h2.329c.752 0 1.335-.193 1.75-.578.415-.386.623-.928.623-1.626 0-.728-.204-1.285-.612-1.67-.407-.386-.995-.579-1.761-.579h-2.33zm14.524 8.21h-5.23V6.181h4.959V5.009h-4.959V1.618h5.23V.43h-6.548V11h6.548V9.813z');
  };

  Graph.prototype.addLegend = function(name, color) {
    if (name === 'x' || name === 'y') {
      name += " position";
    }
    this.legend.append("div").style('vertical-align', 'middle').style("width", "15px").style("height", "15px").style("border-radius", "100px").style('margin', '0 0 0 20px').style("background-color", color);
    return this.legend.append("div").style("font", "normal 15px Menlo, monospace").style('margin', '0 0 0 10px').text(name);
  };

  Graph.prototype.y = function() {
    return d3.scale.linear().range([this.scope.options.height - (this.scope.options.margin * 2), 0]);
  };

  Graph.prototype.timeInterval = function(d, i) {
    return this.x(i + this.time - this.scope.options.limit);
  };

  Graph.prototype.draw = function() {
    var name, plot, ref, results;
    this.x.domain([this.time - this.scope.options.limit, this.time]);
    ref = this.plots;
    results = [];
    for (name in ref) {
      plot = ref[name];
      results.push(plot.draw());
    }
    return results;
  };

  Graph.prototype.tick = function() {
    var name, plot, ref;
    requestAnimationFrame(this.tick);
    this.time++;
    ref = this.plots;
    for (name in ref) {
      plot = ref[name];
      plot.sample();
    }
    return this.draw();
  };

  return Graph;

})();

PlotLine = (function() {
  function PlotLine(options1) {
    var base, base1, base2, base3, base4;
    this.options = options1 != null ? options1 : {};
    this.draw = bind(this.draw, this);
    this.sample = bind(this.sample, this);
    if ((base = this.options).color == null) {
      base.color = Framer.Utils.randomColor().toHexString();
    }
    if ((base1 = this.options).name == null) {
      base1.name = this.options.prop;
    }
    if ((base2 = this.options).key == null) {
      base2.key = this.options.layer.name + "_" + this.options.prop;
    }
    if ((base3 = this.options).min == null) {
      base3.min = 0;
    }
    if ((base4 = this.options).max == null) {
      base4.max = 1;
    }
    this.scope = MotionScope.get();
    this.graph = Graph.get();
    if (this.graph.plots[this.options.key]) {
      return;
    }
    this.y = this.graph.y();
    this.line = d3.svg.line().x(this.graph.timeInterval).y((function(_this) {
      return function(d) {
        return _this.y(d);
      };
    })(this));
    this.data = [];
    this.path = this.graph.paths.append('path').data([this.data]).attr('class', this.options.key + " line").style("stroke-linejoin", 'round').style("stroke-linecap", 'round').style('stroke-width', 5).style('fill', 'transparent').style('stroke', this.options.color);
    this.graph.plots[this.options.key] = this;
    this.graph.addLegend(this.options.name, this.options.color);
  }

  PlotLine.prototype.sample = function() {
    this.data.push(this.options.layer[this.options.prop]);
    if (this.data.length > this.scope.options.limit) {
      this.data.shift();
    }
    return this.path.attr('d', this.line);
  };

  PlotLine.prototype.draw = function() {
    var extent;
    extent = d3.extent(this.data);
    this.options.min = Math.min(this.options.min, extent[0]);
    this.options.max = Math.max(this.options.max, extent[1]);
    return this.y.domain([this.options.min, this.options.max]);
  };

  return PlotLine;

})();

MotionScope = (function(superClass) {
  var _instance;

  extend(MotionScope, superClass);

  _instance = null;

  function MotionScope(options1) {
    var base, base1, base2, base3;
    this.options = options1 != null ? options1 : {};
    if ((base = this.options).width == null) {
      base.width = 600;
    }
    if ((base1 = this.options).height == null) {
      base1.height = 600;
    }
    if ((base2 = this.options).margin == null) {
      base2.margin = 75;
    }
    if ((base3 = this.options).limit == null) {
      base3.limit = 300;
    }
    if (this.options.parent) {
      this.options.parent.index = -90210;
      this.options.width = this.options.parent.width;
      this.options.height = this.options.parent.height;
    } else {
      this.options.parent = Framer.Device.content;
    }
    if (this.options.reset) {
      this.options.reset.onClick((function(_this) {
        return function() {
          return _this.reset();
        };
      })(this));
    }
  }

  MotionScope.get = function(options) {
    if (options == null) {
      options = {};
    }
    return _instance != null ? _instance : _instance = new MotionScope(options);
  };

  MotionScope.load = function(options, callback) {
    if (options == null) {
      options = {};
    }
    return Utils.domLoadScript('https://d3js.org/d3.v3.min.js', function() {
      if (typeof options === 'function') {
        callback = options;
        options = {};
      }
      return callback(MotionScope.get(options));
    });
  };

  MotionScope.prototype.reset = function() {
    var key, plot, ref, results;
    ref = Graph.get().plots;
    results = [];
    for (key in ref) {
      plot = ref[key];
      results.push(plot.data.splice(0));
    }
    return results;
  };

  MotionScope.prototype.plot = function(layer, prop, options) {
    if (options == null) {
      options = {};
    }
    return setTimeout((function(_this) {
      return function() {
        if (options.layer == null) {
          options.layer = layer;
        }
        if (options.prop == null) {
          options.prop = prop;
        }
        return new PlotLine(options);
      };
    })(this), 0);
  };

  return MotionScope;

})(Framer.BaseClass);

module.exports = MotionScope;


},{}],"myModule":[function(require,module,exports){
exports.myVar = "myVariable";

exports.myFunction = function() {
  return print("myFunction is running");
};

exports.myArray = [1, 2, 3];


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
